<div class="container">
    <section id="orders_section">
        <h2>注文情報一覧</h2>
        <table id="orders_table">
            <tr>
                <th>注文番号</th>
                <th>注文者</th>
                <th>連絡先</th>
                <th>住所</th>
                <th>日付</th>
                <th>商品</th>
                <th>個数</th>
                <th>価格</th>
            </tr>
        </table>
        <button id="add_info"><a href="/add_form/" onclick="route()">情報を追加する</a></button>
    </section>
    <section id="calendar_section">
        <div id="calendar_header">
            <button id="prev" type="button">&lt;</button>
            <h2 id="calendar_head"></h2>
            <button id="next" type="button">&gt;</button>
        </div>
        <div id="calendar_body"></div>
    </section>
    <div id="easyModal" class="modal">
        <div class="closeContain"><span class="modalClose">×</span></div>
        <table class="modalContent"></table>
    </div>
</div>
<!--<script>
    // 一覧リスト
    const orders = JSON.parse('<%= JSON.stringify(orders) %>'.replace(/&#34;/g, '"'));
    let orders_table = document.getElementById("orders_table");
    for (let i = 0; i < orders.length; i++) {
        let tr = document.createElement("tr");
        let td_num = document.createElement("td");
        let td_person = document.createElement("td");
        let td_phone = document.createElement("td");
        let td_address = document.createElement("td");
        let td_date = document.createElement("td");
        let td_product = document.createElement("td");
        let td_amount = document.createElement("td");
        let td_price = document.createElement("td");
        td_num.innerHTML = `${orders[i].num}`
        td_person.innerHTML = `${orders[i].person}`
        td_phone.innerHTML = `${orders[i].phone}`
        td_address.innerHTML = `${orders[i].address}`
        td_date.innerHTML = `${orders[i].date}`
        td_product.innerHTML = `${orders[i].product}`
        td_amount.innerHTML = `${orders[i].amount}`
        td_price.innerHTML = `${orders[i].price}`
        tr.append(td_num)
        tr.append(td_person)
        tr.append(td_phone)
        tr.append(td_address)
        tr.append(td_date)
        tr.append(td_product)
        tr.append(td_amount)
        tr.append(td_price)
        orders_table.append(tr)
    }
    // カレンダー
    let weeks = ['日', '月', '火', '水', '木', '金', '土']
    let dates = new Date()
    let year = dates.getFullYear()
    let month = dates.getMonth() + 1
    // カレンダー表示
    function showCalendar(year, month) {
        let calendarHtml = createCalendar(year, month)
        document.querySelector("#calendar_body").innerHTML = calendarHtml
        month++
        if (month > 12) {
            year++
            month = 1
        }
        // 日付部分に注文者表示
        // DBの日付とカレンダーの日付、照合
        let calendar_table = document.getElementById("calendar_table")
        let cells = calendar_table.querySelectorAll('td');
        let cell_month = document.getElementById("calendar_head").textContent
        let cell_month_split = cell_month.split("/")
        cells.forEach(function (cell) {
            for (let i = 0; i < orders.length; i++) {
                let order_dates = orders[i].date;
                let order_date = order_dates.split("-")
                if (cell_month_split[1] == order_date[1].replace(/^0+/, '') && cell.textContent == order_date[2]) {
                    cell.classList.add("order_date")
                    cell.innerHTML = order_date[2] + `<br>${orders[i].person}`
                }
            }
        });
        // モーダル表示
        const modal = document.getElementById('easyModal');
        const modalContent = document.getElementsByClassName('modalContent')[0];
        const buttonClose = document.getElementsByClassName('modalClose')[0];
        document.addEventListener("click", function (e) {
            // 日付クリックで詳細情報の表示
            if (e.target.classList.contains("order_date")) {
                modal.style.display = 'block';
                let count = {}
                for (let i = 0; i < orders.length; i++) {
                    let order_dates = orders[i].date;
                    let order_date = order_dates.split("-")
                    // クリックされた日付=ordersの日付→詳細情報をモーダルに表示
                    if (e.target.textContent.replace(/[^0-9]/g, '') == order_date[2]) {
                        modalContent.innerHTML
                            = ` <tr><th>注文者：</th><td>${orders[i].person}</td></tr>
                <tr><th>連絡先：</th><td>${orders[i].phone}</td></tr>
                <tr><th>住所：</th><td>${orders[i].address}</td></tr>
                <tr><th>商品：</th><td>${orders[i].product}</td></tr>
                <tr><th>個数：</th><td>${orders[i].amount}</td></tr>
                <tr><th>価格：</th><td>${orders[i].price}</td></tr>`
                    }
                    // 日付重複チェック
                    let key = orders[i].date;
                    count[key] = (count[key] ? count[key] + 1 : 1)
                }
                for (let key in count) {
                    let key_split = key.split("-")
                    // クリックされた日付と、重複した日付の照合
                    if (e.target.textContent.replace(/[^0-9]/g, '') == key_split[2] && count[key] == 2) {
                        modalContent.innerHTML +=
                            `<tr><th class="border">注文者：</th><td class="border">${orders[1].person}</td></tr>
                        <tr><th>連絡先：</th><td>${orders[1].phone}</td></tr>
                        <tr><th>住所：</th><td>${orders[1].address}</td></tr>
                        <tr><th>商品：</th><td>${orders[1].product}</td></tr>
                        <tr><th>個数：</th><td>${orders[1].amount}</td></tr>
                        <tr><th>価格：</th><td>${orders[1].price}</td></tr>`
                    }
                };
            }
        })
        // モーダル閉じる
        buttonClose.addEventListener('click', function modalClose() {
            modal.style.display = 'none';
        })
    }
    // カレンダー作成
    function createCalendar(year, month) {
        let startDate = new Date(year, month - 1, 1);//月の最初の日付
        let endDate = new Date(year, month, 0);//月の最後の日付
        let endDateCount = endDate.getDate(); //月の末日
        let lastMonthEndDate = new Date(year, month - 1, 0) // 前月の最後の日付
        let lastMonthDateCount = lastMonthEndDate.getDate() // 前月の末日
        let startDay = startDate.getDay();//月の最初の日の曜日を取得
        let dayCount = 1;//日にちのカウント
        // 見出し
        let h2 = document.getElementById("calendar_head")
        h2.innerHTML = year + "/" + month
        // HTML構造
        let calendarHtml = '' //htmlを組み立てる変数
        calendarHtml += '<table id="calendar_table"><tr class="grid_7">'
        // 横列
        for (let i = 0; i < weeks.length; i++) {
            calendarHtml += '<th>' + weeks[i] + '</th>'
        }
        calendarHtml += '</tr>'
        //縦列
        for (let w = 0; w < 6; w++) {
            calendarHtml += '<tr class="grid_7">'
            for (let d = 0; d < 7; d++) {
                if (w == 0 && d < startDay) {
                    // 1行目で1日の曜日の前
                    calendarHtml += '<td></td>'
                } else if (dayCount > endDateCount) {
                    // 末尾の日付を超える
                    calendarHtml += '<td></td>'
                } else {
                    calendarHtml += '<td>' + dayCount + '</td>'
                    dayCount++
                }
            }
            calendarHtml += '</tr>'
        }
        calendarHtml += '</table>'
        return calendarHtml
    }
    // 前後の月へ移動
    function moveCalendar(e) {
        document.querySelector("#calendar_body").innerHTML = ''
        if (e.target.id === "prev") {
            month--
            if (month < 1) {
                year--
                month = 12
            }
        }
        if (e.target.id === "next") {
            month++
            if (month > 12) {
                year++
                month = 1
            }
        }
        showCalendar(year, month)
    }
    document.querySelector('#prev').addEventListener('click', moveCalendar)
    document.querySelector('#next').addEventListener('click', moveCalendar)
    showCalendar(year, month)
</script> -->


